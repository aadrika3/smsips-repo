{"version":3,"file":"static/js/products.a3add6ec.chunk.js","mappings":"8LAyBA,OAAeA,EAAAA,EAAAA,KApBf,SAAoBC,GAAc,IAAZC,EAAQD,EAARC,SACpB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACuB,IAApBF,EAASG,SAAgBC,EAAAA,EAAAA,KAAA,OAAAF,SAAK,sBAC/BE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMH,SACjBF,EAASM,KAAI,SAACC,GAAO,OACpBH,EAAAA,EAAAA,KAAA,MAAqBI,KAAK,eAAcN,UACtCE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMH,UACnBE,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CACVC,KAAMH,EAAQG,KACdC,YAAaJ,EAAQI,iBAJlBJ,EAAQK,GAOZ,QAKf,I,iBCJA,MAbA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,MAAO,CAELd,UAAUe,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMhB,SAASiB,IAAI,IAIpDC,aAAaC,EAAAA,EAAAA,cAAY,kBAAMN,GAASO,EAAAA,EAAAA,MAAqB,GAAE,CAACP,IAEpE,ECuBA,MAjCA,WACE,IAAAQ,EAAkCC,IAA1BJ,EAAWG,EAAXH,YAAalB,EAAQqB,EAARrB,SAUrB,OARAuB,EAAAA,EAAAA,YAAU,WACRL,GACF,GAAG,CAACA,KAOFjB,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oBAAmBH,SAAA,EAChCE,EAAAA,EAAAA,KAACoB,EAAAA,GAAU,CACTC,MAAM,WACNC,cARN,WACER,GACF,EAOMS,UAAU,eAEZvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCH,UAC/CE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaH,UAC1BE,EAAAA,EAAAA,KAACwB,EAAAA,GAAM,CAAA1B,UACLE,EAAAA,EAAAA,KAACyB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAK,YACLC,UAAW,kBAAM5B,EAAAA,EAAAA,KAAC6B,EAAW,CAACjC,SAAUA,GAAY,YAOlE,C","sources":["products/ProductList.js","products/useProducts.js","products/Products.js"],"sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport { CardContent } from '../components';\r\n\r\nfunction ProductList({products}) {\r\n  return (\r\n    <div>\r\n      {products.length === 0 && <div>Loading data ...</div>}\r\n      <ul className=\"list\">\r\n        {products.map((product) => (\r\n          <li key={product.id} role=\"presentation\">\r\n            <div className=\"card\">\r\n              <CardContent\r\n                name={product.name}\r\n                description={product.description}\r\n              />\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ProductList);\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { loadProductsAction } from '../store';\r\n\r\n/** Custom hook for accessing Product state in redux store */\r\nfunction useProducts() {\r\n  const dispatch = useDispatch();\r\n\r\n  return {\r\n    // Selectors\r\n    products: useSelector((state) => state.products.data),\r\n\r\n    // Dispatchers\r\n    // Wrap any dispatcher that could be called within a useEffect() in a useCallback()\r\n    getProducts: useCallback(() => dispatch(loadProductsAction()), [dispatch]), // called within a useEffect()\r\n  };\r\n}\r\n\r\nexport default useProducts;\r\n","import React, { useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport { ListHeader } from '../components';\r\nimport ProductList from './ProductList';\r\nimport useProducts from './useProducts';\r\n\r\nfunction Products() {\r\n  const { getProducts, products } = useProducts();\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, [getProducts]);\r\n\r\n  function handleRefresh() {\r\n    getProducts();\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n      <ListHeader\r\n        title=\"Products\"\r\n        handleRefresh={handleRefresh}\r\n        routePath=\"/products\"\r\n      />\r\n      <div className=\"columns is-multiline is-variable\">\r\n        <div className=\"column is-8\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/products\"\r\n              component={() => <ProductList products={products} />}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Products;\r\n"],"names":["withRouter","_ref","products","_jsxs","children","length","_jsx","className","map","product","role","CardContent","name","description","id","dispatch","useDispatch","useSelector","state","data","getProducts","useCallback","loadProductsAction","_useProducts","useProducts","useEffect","ListHeader","title","handleRefresh","routePath","Switch","Route","exact","path","component","ProductList"],"sourceRoot":""}